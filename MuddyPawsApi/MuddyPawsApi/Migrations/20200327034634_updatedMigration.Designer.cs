// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MuddyPawsApi.Models;

namespace MuddyPawsApi.Migrations
{
    [DbContext(typeof(MuddyPawsDBContext))]
    [Migration("20200327034634_updatedMigration")]
    partial class updatedMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MuddyPawsApi.Models.Hotel", b =>
                {
                    b.Property<int>("Hotelid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BoardingPrice")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DeluxePrice")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("KittyPricing")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RemainingAvailable")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Reviews")
                        .HasColumnType("nvarchar(4000)");

                    b.HasKey("Hotelid");

                    b.ToTable("Hotel");
                });

            modelBuilder.Entity("MuddyPawsApi.Models.MuddyPawsEmployee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmployeeEmail")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmployeeName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmployeePhone")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmployeeRole")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SecretKey")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("EmployeeId");

                    b.ToTable("muddyPawsEmployee");
                });

            modelBuilder.Entity("MuddyPawsApi.Models.MuddyPawsPets", b =>
                {
                    b.Property<int>("PetID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CheckinDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("CheckoutDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("OwnersName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PetName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ProfilePicture")
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SpecialNeeds")
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("StreetAddress")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("PetID");

                    b.ToTable("muddyPawsPet");
                });

            modelBuilder.Entity("MuddyPawsApi.Models.Reviews", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PostedDate")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ReviewBody")
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("ReviewerName")
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ReviewId");

                    b.ToTable("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
